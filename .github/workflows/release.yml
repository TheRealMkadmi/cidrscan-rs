name: Build and Release Libraries

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    paths-ignore: [.github/workflows/release.yml]
  workflow_dispatch:

jobs:
  build-linux-windows:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install cross
        run: cargo install cross
      - name: Install Rust stable toolchain
        run: rustup default stable
      - name: Add Rust targets
        run: rustup target add x86_64-unknown-linux-gnu aarch64-unknown-linux-gnu x86_64-pc-windows-msvc aarch64-pc-windows-msvc
      - name: Build and package cross targets
        run: |
          mkdir packages
          for pair in "x86_64-unknown-linux-gnu:linux-x86_64" "aarch64-unknown-linux-gnu:linux-aarch64" "x86_64-pc-windows-msvc:windows-x86_64" "aarch64-pc-windows-msvc:windows-aarch64"; do
            IFS=":" read -r target name <<< "$pair"
            cross build --release --target $target
            mkdir -p packages/$name
            cp target/release/cidrscan.h packages/$name/
            case "$target" in
              *windows-msvc)
                cp target/$target/release/cidrscan.dll packages/$name/ || true
                cp target/$target/release/cidrscan.lib packages/$name/ || true
                ;;
              *)
                cp target/$target/release/libcidrscan.* packages/$name/ || true
                ;;
            esac
            cd packages/$name
            zip -r ../../$name.zip *
            cd ../../
          done
      - name: Upload release assets
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: '*.zip'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos:
    name: Build macOS
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4
      - name: Install Rust stable toolchain
        run: rustup default stable
      - name: Add Rust targets
        run: rustup target add x86_64-apple-darwin aarch64-apple-darwin
      - name: Install cbindgen
        run: brew install cbindgen
      - name: Build and package macOS targets
        run: |
          rustup target add x86_64-apple-darwin aarch64-apple-darwin
          mkdir packages
          for pair in "x86_64-apple-darwin:macos-x86_64" "aarch64-apple-darwin:macos-aarch64"; do
            IFS=":" read -r target name <<< "$pair"
            cargo build --release --target $target
            mkdir -p packages/$name
            cp target/$target/release/cidrscan.h packages/$name/
            cp target/$target/release/libcidrscan.dylib packages/$name/ || true
            cd packages/$name
            zip -r ../../$name.zip *
            cd ../../
          done
      - name: Upload release assets
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: '*.zip'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
