name: Build and Release Libraries

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    paths-ignore: [.github/workflows/release.yml]
  workflow_dispatch:

jobs:
  build-linux-windows:
    name: Build Linux & Windows
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            artifact_name: linux-x86_64
          - target: aarch64-unknown-linux-gnu
            artifact_name: linux-aarch64
          - target: x86_64-pc-windows-msvc
            artifact_name: windows-x86_64
          - target: aarch64-pc-windows-msvc
            artifact_name: windows-aarch64

    steps:
      - uses: actions/checkout@v4

      - name: Install cross
        run: |
          cargo install cross

      - name: Build libraries
        uses: houseabsolute/actions-rust-cross@v1
        with:
          command: build
          target: ${{ matrix.target }}
          args: "--release"
          strip: true

      - name: Package artifacts
        run: |
          mkdir artifacts
          cp target/${{ matrix.target }}/release/cidrscan.h artifacts/
          case "${{ matrix.target }}" in
            *windows-msvc)
              cp target/${{ matrix.target }}/release/cidrscan.dll artifacts/ || true
              cp target/${{ matrix.target }}/release/cidrscan.lib artifacts/ || true
              ;;
            *)
              cp target/${{ matrix.target }}/release/libcidrscan.* artifacts/ || true
              ;;
          esac
          cd artifacts
          zip -r ../${{ matrix.artifact_name }}.zip *

      - name: Upload release asset
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ matrix.artifact_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos:
    name: Build macOS
    runs-on: macos-latest
    strategy:
      matrix:
        include:
          - target: x86_64-apple-darwin
            artifact_name: macos-x86_64
          - target: aarch64-apple-darwin
            artifact_name: macos-aarch64

    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install Rust target
        run: rustup target add ${{ matrix.target }}
      - name: Install cbindgen
        run: brew install cbindgen

      - name: Build library
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package artifacts
        run: |
          mkdir artifacts
          cp target/${{ matrix.target }}/release/cidrscan.h artifacts/
          cp target/${{ matrix.target }}/release/libcidrscan.dylib artifacts/ || true
          cd artifacts
          zip -r ../${{ matrix.artifact_name }}.zip *

      - name: Upload release asset
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ matrix.artifact_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
